-- 1. Colocar em uso o banco de dados CURSOS_INFORMATICA, abrir e executar 
-- os comandos de inserção dos arquivos.
USE CURSOS_INFORMATICA;

-- 2. Apresentar todas as salas de aula para as quais não há nenhum 
--    curso marcado
-- Com JOIN
SELECT S.* 
FROM CAD_SALAS S LEFT JOIN MOV_CURSOS C ON S.ID_SALA = C.ID_SALA
WHERE C.ID_SALA IS NULL;
-- Com Sub-Query
SELECT * FROM CAD_SALAS
WHERE ID_SALA NOT IN (SELECT ID_SALA FROM MOV_CURSOS);


-- 3. Apresentar todos os treinamentos para os quais não temos instrutor
-- Com JOIN
SELECT T.* 
FROM CAD_TREINAMENTOS T 
LEFT JOIN CAD_INSTRUTORES_TREINAMENTOS IT ON T.ID_TREINAMENTO = IT.ID_TREINAMENTO
WHERE IT.ID_TREINAMENTO IS NULL;
-- Com Sub-Query
SELECT * FROM CAD_TREINAMENTOS 
WHERE ID_TREINAMENTO NOT IN (SELECT ID_TREINAMENTO 
                             FROM CAD_INSTRUTORES_TREINAMENTOS);
                             
-- 4. Apresentar os alunos (CAD_PESSOAS) que não tem e nem tiveram 
--    nenhum curso agendado 
-- Com JOIN
SELECT P.*
FROM CAD_PESSOAS P  
   LEFT JOIN MOV_CURSOS_ALUNOS CA ON P.ID_PESSOA = CA.ID_PESSOA_ALUNO
WHERE CA.ID_PESSOA_ALUNO IS NULL AND P.SN_ALUNO = 'S';  
-- Com Sub-Query
SELECT * FROM CAD_PESSOAS 
WHERE ID_PESSOA NOT IN (SELECT ID_PESSOA_ALUNO FROM MOV_CURSOS_ALUNOS)
      AND SN_ALUNO = 'S'; 

-- 5. Apresentar os departamentos onde não existem funcionários cadastrados
-- Com JOIN
SELECT D.*
FROM CAD_DEPTOS D
     LEFT JOIN CAD_FUNCIONARIOS F ON D.ID_DEPTO = F.ID_DEPTO
WHERE F.ID_DEPTO IS NULL;
-- Com Sub-Query
SELECT * FROM CAD_DEPTOS
WHERE ID_DEPTO NOT IN (SELECT ID_DEPTO FROM CAD_FUNCIONARIOS);

-- 6. Apresentar os cargos para os quais não existem funcionários cadastrados
-- Com JOIN
SELECT C.* 
FROM CAD_CARGOS C LEFT JOIN CAD_FUNCIONARIOS F ON C.ID_CARGO = F.ID_CARGO
WHERE F.ID_CARGO IS NULL;
-- Com Sub-Query
SELECT * FROM CAD_CARGOS
WHERE ID_CARGO NOT IN (SELECT ID_CARGO FROM CAD_FUNCIONARIOS);

-- 7. Apresentar as pessoas que sejam de estados cujo ICMS seja menor que 7
-- Com JOIN
SELECT P.*, E.ESTADO, E.ICMS
FROM CAD_PESSOAS P JOIN CAD_MUNICIPIOS M ON P.ID_MUNICIPIO = M.ID_MUNICIPIO
                   JOIN CAD_ESTADOS E ON M.ID_ESTADO = E.ID_ESTADO
WHERE E.ICMS < 7;
                   
-- Com Sub-Query
SELECT * FROM CAD_PESSOAS
WHERE ID_MUNICIPIO IN (SELECT ID_MUNICIPIO FROM CAD_MUNICIPIOS
                       WHERE ID_ESTADO IN ( SELECT ID_ESTADO 
                                            FROM CAD_ESTADOS
                                            WHERE ICMS < 7 ) );

-- 8. Apresentar os dados do instrutor que possui o maior valor hora
-- Solução 1
SELECT * FROM CAD_PESSOAS
WHERE ID_PESSOA IN
(
SELECT ID_PESSOA_INSTR FROM CAD_INSTRUTORES_TREINAMENTOS
WHERE VLR_HORA = (SELECT MAX(VLR_HORA) FROM CAD_INSTRUTORES_TREINAMENTOS)
);
-- Solução 2
SELECT TOP 1 ID_PESSOA, NOME, (SELECT TOP 1 VLR_HORA FROM CAD_INSTRUTORES_TREINAMENTOS
                 WHERE ID_PESSOA_INSTR = CAD_PESSOAS.ID_PESSOA
                 ORDER BY VLR_HORA DESC) AS VLR_HORA
FROM CAD_PESSOAS
WHERE SN_INSTRUTOR = 'S'
ORDER BY 3 DESC;                        
-- Solução 3
SELECT TOP 1 WITH TIES P.*, I.VLR_HORA
FROM CAD_PESSOAS P JOIN CAD_INSTRUTORES_TREINAMENTOS I ON P.ID_PESSOA = I.ID_PESSOA_INSTR
ORDER BY I.VLR_HORA DESC;

-- 9. Apresentar os dados do instrutor que possui o MENOR valor hora
-- Solução 1
SELECT * FROM CAD_PESSOAS
WHERE ID_PESSOA IN
(
SELECT ID_PESSOA_INSTR FROM CAD_INSTRUTORES_TREINAMENTOS
WHERE VLR_HORA = (SELECT MIN(VLR_HORA) FROM CAD_INSTRUTORES_TREINAMENTOS)
);
-- Solução 2
SELECT TOP 1 ID_PESSOA, NOME, (SELECT TOP 1 VLR_HORA FROM CAD_INSTRUTORES_TREINAMENTOS
                 WHERE ID_PESSOA_INSTR = CAD_PESSOAS.ID_PESSOA
                 ORDER BY VLR_HORA) AS VLR_HORA
FROM CAD_PESSOAS
WHERE SN_INSTRUTOR = 'S'
ORDER BY 3;
-- Solução 3
SELECT TOP 1 WITH TIES P.*, I.VLR_HORA
FROM CAD_PESSOAS P JOIN CAD_INSTRUTORES_TREINAMENTOS I ON P.ID_PESSOA = I.ID_PESSOA_INSTR
ORDER BY I.VLR_HORA;