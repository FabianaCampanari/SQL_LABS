USE PEDIDOS;

SELECT 	TB_EMPREGADO.CODFUN, TB_EMPREGADO.NOME, 
    		TB_DEPARTAMENTO.DEPTO
FROM TB_EMPREGADO JOIN TB_DEPARTAMENTO
     ON TB_EMPREGADO.COD_DEPTO = TB_DEPARTAMENTO.COD_DEPTO;

SELECT TB_EMPREGADO.CODFUN, TB_EMPREGADO.NOME, TB_DEPARTAMENTO.DEPTO
FROM TB_EMPREGADO, TB_DEPARTAMENTO
WHERE TB_EMPREGADO.COD_DEPTO = TB_DEPARTAMENTO.COD_DEPTO;

--Exemplo 1

SELECT CODFUN, NOME, DEPTO
FROM TB_EMPREGADO JOIN TB_DEPARTAMENTO
     ON TB_EMPREGADO.COD_DEPTO = TB_DEPARTAMENTO.COD_DEPTO;

--	Exemplo 2

SELECT CODFUN, NOME, DEPTO
FROM TB_EMPREGADO JOIN TB_DEPARTAMENTO
     ON COD_DEPTO = COD_DEPTO;


SELECT E.CODFUN, E.NOME, D.DEPTO
FROM TB_EMPREGADO AS E JOIN TB_DEPARTAMENTO AS D
     ON E.COD_DEPTO = D.COD_DEPTO;

-- OU
SELECT E.CODFUN, E.NOME, D.DEPTO
FROM TB_EMPREGADO E JOIN TB_DEPARTAMENTO D
     ON E.COD_DEPTO = D.COD_DEPTO;


SELECT  
  E.CODFUN, E.NOME, E.CODIGO_DEPTO, E.COD_CARGO, D.DEPTO
FROM TB_EMPREGADS E
  JOIN TB_DEPARTAMENTO D ON E.COD_DEPTO = D.COD_DEPTO;


---Mensagem 208, Nível 16, Estado 1, Linha 1
--Invalid object name 'EMPREGADS'


-- TB_EMPREGADO e TB_CARGO (cargos)
SELECT E.CODFUN, E.NOME, C.CARGO
FROM TB_EMPREGADO E JOIN TB_CARGO C ON E.COD_CARGO = C.COD_CARGO;
-- OU
SELECT E.CODFUN, E.NOME, C.CARGO
FROM TB_CARGO C JOIN TB_EMPREGADO E ON E.COD_CARGO = C.COD_CARGO;



-- Consultar 3 tabelas
SELECT  
  E.CODFUN, E.NOME, E.COD_DEPTO, E.COD_CARGO, D.DEPTO, C.CARGO
FROM TB_EMPREGADO E
  JOIN TB_DEPARTAMENTO D ON E.COD_DEPTO = D.COD_DEPTO
  JOIN TB_CARGO C ON E.COD_CARGO = C.COD_CARGO;
-- OU
SELECT  
  E.CODFUN, E.NOME, E.COD_DEPTO, E.COD_CARGO, D.DEPTO, C.CARGO
FROM TB_DEPARTAMENTO D
  JOIN TB_EMPREGADO E ON E.COD_DEPTO = D.COD_DEPTO
  JOIN TB_CARGO C  ON E.COD_CARGO = C.COD_CARGO;
-- OU
SELECT  
  E.CODFUN, E.NOME, E.COD_DEPTO, E.COD_CARGO, D.DEPTO, C.CARGO
FROM TB_CARGO C
  JOIN TB_EMPREGADO E ON E.COD_CARGO = C.COD_CARGO
  JOIN TB_DEPARTAMENTO D  ON E.COD_DEPTO = D.COD_DEPTO;


SELECT  
  E.CODFUN, E.NOME, E.COD_DEPTO, E.COD_CARGO, D.DEPTO, C.CARGO
FROM TB_CARGO C
  JOIN TB_DEPARTAMENTO D  ON E.COD_DEPTO = D.COD_DEPTO   --<< (1)
  JOIN TB_EMPREGADO E ON E.COD_CARGO = C.COD_CARGO;


/* 
   	 Join com 6 tabelas. Vai exibir:
      TB_ITENSPEDIDO.NUM_PEDIDO
      TB_ITENSPEDIDO.NUM_ITEM
      TB_ITENSPEDIDO.COD_PRODUTO
      TB_PRODUTO.DESCRICAO
      TB_ITENSPEDIDO.QUANTIDADE
      TB_ITENSPEDIDO.PR_UNITARIO
      TB_TIPOPRODUTO.TIPO
      TB_UNIDADE.UNIDADE
      TB_COR.COR
      TB_PEDIDO.DATA_EMISSAO
      
      Filtrando pedidos emitidos em Janeiro de 2014
*/
SELECT
   I.NUM_PEDIDO, I.NUM_ITEM, I.COD_PRODUTO, PR.DESCRICAO,
   I.QUANTIDADE, I.PR_UNITARIO, T.TIPO, U.UNIDADE, CR.COR,
   PE.DATA_EMISSAO
FROM TB_ITENSPEDIDO I
   JOIN TB_PRODUTO PR   ON I.ID_PRODUTO   = PR.ID_PRODUTO
   JOIN TB_COR CR     ON I.CODCOR       = CR.CODCOR
   JOIN TB_TIPOPRODUTO T ON PR.COD_TIPO    = T.COD_TIPO
   JOIN TB_UNIDADE U    ON PR.COD_UNIDADE = U.COD_UNIDADE
   JOIN TB_PEDIDO PE    ON I.NUM_PEDIDO   = PE.NUM_PEDIDO     
WHERE PE.DATA_EMISSAO BETWEEN '2014.1.1' AND '2014.1.31';  


SELECT E.CODFUN, E.NOME AS FUNCIONARIO, S.NOME AS SUPERVISOR
FROM TB_EMPREGADO E JOIN TB_EMPREGADO S 
     ON E.COD_SUPERVISOR = S.CODFUN;


-- INNER JOIN
SELECT * FROM TB_EMPREGADO; -- retorna 61 linhas
--
SELECT  -- retorna 58 linhas
  E.CODFUN, E.NOME, E.COD_DEPTO, E.COD_CARGO, C.CARGO
FROM TB_EMPREGADO E
  INNER JOIN TB_CARGO C ON E.COD_CARGO = C.COD_CARGO;
-- OU (a palavra INNER é opcional)
SELECT  -- retorna 58 linhas
  E.CODFUN, E.NOME, E.COD_DEPTO, E.COD_CARGO, C.CARGO
FROM TB_EMPREGADO E
  JOIN TB_CARGO C ON E.COD_CARGO = C.COD_CARGO;

/*
   Existem 61 linhas na tabela TB_EMPREGADO, mas quando fazemos
   INNER JOIN com TB_CARGO, retorna apenas com 58 linhas.
   A explicação para isso é que existem 3 linhas em TB_EMPREGADO
   com COD_CARGO inválido, inexistente em TB_DEPARTAMENTO.
*/

-- Filtrar somente os registros não correspondentes
SELECT  -- retorna 3 linhas
  E.CODFUN, E.NOME, E.COD_DEPTO, E.COD_CARGO, C.CARGO
FROM TB_EMPREGADO E
  LEFT JOIN TB_CARGO C ON E.COD_CARGO = C.COD_CARGO
WHERE C.COD_CARGO IS NULL;

SELECT  
  E.CODFUN, E.NOME, E.COD_DEPTO, E.COD_CARGO, D.DEPTO
FROM TB_EMPREGADO E RIGHT JOIN TB_DEPARTAMENTO D ON E.COD_DEPTO = D.COD_DEPTO;  
-- O resultado terá 2 departamentos que
-- não retornaram dados de TB_EMPREGADO.

-- Filtrar somente os registros não correspondentes
SELECT  
  E.CODFUN, E.NOME, E.COD_DEPTO, E.COD_CARGO, D.DEPTO
FROM TB_EMPREGADO E RIGHT JOIN TB_DEPARTAMENTO D ON E.COD_DEPTO = D.COD_DEPTO  
WHERE E.COD_DEPTO IS NULL;	


-- FULL JOIN une o LEFT e o RIGHT JOIN
SELECT  
  E.CODFUN, E.NOME, E.COD_DEPTO, E.COD_CARGO, C.CARGO
FROM TB_EMPREGADO E FULL JOIN TB_CARGO C ON E.COD_CARGO = C.COD_CARGO;  
-- Observe o resultado e veja que existem 2 departamentos que
-- não retornaram dados de TB_EMPREGADO.

-- Filtrar somente os registros não correspondentes
SELECT  
  E.CODFUN, E.NOME, E.COD_DEPTO, E.COD_CARGO, C.CARGO
FROM TB_EMPREGADO E FULL JOIN TB_CARGO C ON E.COD_CARGO = C.COD_CARGO
WHERE E.COD_CARGO IS NULL OR C.COD_CARGO IS NULL;


-- CROSS JOIN
SELECT  -- retorna 854 linhas
  E.CODFUN, E.NOME, E.COD_DEPTO, E.COD_CARGO, D.DEPTO
FROM TB_EMPREGADO E CROSS JOIN TB_DEPARTAMENTO D;
